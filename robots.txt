

import PyPDF2

def extract_page(input_pdf_path, output_pdf_path, page_number):
    with open(input_pdf_path, 'rb') as input_file:
        reader = PyPDF2.PdfReader(input_file)

        if page_number < 1 or page_number > len(reader.pages):
            raise ValueError(f"Invalid page number. PDF has {reader.numPages} pages.")

        # Create a new PDF with the desired page
        writer = PyPDF2.PdfWriter()
        writer.add_page(reader.pages[page_number - 1])

        with open(output_pdf_path, 'wb') as output_file:
            writer.write(output_file)

input_pdf_path = 'pdfs/MM_Annual_Report_2021.pdf'
output_pdf_path = 'MM_Annual_Report_2021_153.pdf'
page_number = 153  # The page you want to extract (1-based index)

extract_page(input_pdf_path, output_pdf_path, page_number)








Message: Service geckodriver.exe unexpectedly exited. Status code was: 3221226505















# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:
DeprecationWarning: executable_path has been deprecated, please pass in a Service object
  driver = webdriver.Firefox(options=options,  executable_path='geckodriver.exe', desired_capabilities=caps)
  
  
DeprecationWarning: capabilities and desired_capabilities have been deprecated, please pass in a Service object
  driver = webdriver.Firefox(options=options,  service = service, desired_capabilities=caps)


Service.__init__() got an unexpected keyword argument 'DesiredCapabilities'


class FirefoxService(
    executable_path: str = DEFAULT_EXECUTABLE_PATH,
    port: int = 0,
    service_args: List[str] | None = None,
    log_path: str | None = None,
    env: Mapping[str, str] | None = None
)
A Service class that is responsible for the starting and stopping of geckodriver.

:param executable_path: install path of the geckodriver executable, defaults to geckodriver.
:param port: Port for the service to run on, defaults to 0 where the operating system will decide.
:param service_args: (Optional) List of args to be passed to the subprocess when launching the executable.
:param log_path: (Optional) File path for the file to be opened and passed as the subprocess stdout/stderr handler,
    defaults to geckodriver.log.
:param env: (Optional) Mapping of environment variables for the new process, defaults to os.environ.




Failed to execute query. Error: Invalid column name 'GS Residual Positions Policy'.

select * from [dbo].[metadata] WHERE control_name = "GS Residual Positions Policy"
